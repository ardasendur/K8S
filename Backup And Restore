Backup candidates: 
    - Resource Configuration  
    - ETCD Cluster -> store the state of resources
      etcd cluster is stored in master node
      
     etcdctl is command line client for etcd 
     If you want to take a snapchot for etcd
       - etcdctl snapshot save -h
       - etcdctl snapshot restore -h
       
To get etcd version: 
  Check image of etcd

To get certificate, (cert ->server sertificate)
Learn certificate path from kubectl get po <etc-d> -n kube-system //generally static pod

To take snapshot : 
   -- cacert 
   -- cert
   -- key (server key)
   --endpoints
   

   export ETCDCTL_API=3
   ETCDCTL_API=3 etcdtl member list
   ETCDCTL_API=3 etcdctl snapshot save ...
   ETCDCTL_API=3 etcdctl snapshot status 
   etcdctl member list for test certificated
    
    
Since our ETCD database is TLS-Enabled, the following options are mandatory:

--cacert                                                verify certificates of TLS-enabled secure servers using this CA bundle

--cert                                                    identify secure client using this TLS certificate file

--endpoints=[127.0.0.1:2379]          This is the default as ETCD is running on master node and exposed on localhost 2379.

--key                                                      identify secure client using this TLS key file


ETCDCTL_API=3 etcdctl --endpoints=https://[127.0.0.1]:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt \
     --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key \
     snapshot save /opt/snapshot-pre-boot.db
     
https://github.com/mmumshad/kubernetes-the-hard-way/blob/master/practice-questions-answers/cluster-maintenance/backup-etcd/etcd-backup-and-restore.md
